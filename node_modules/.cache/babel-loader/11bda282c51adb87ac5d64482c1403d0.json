{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React from 'react';\nimport axios from 'axios'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nexport default class ArticlePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n  /* const article = PlayerAPI.get(\n     parseInt(props.match.params.id, 10)\n   )\n   if (!article) {\n     return <div>Sorry, but the article was not found</div>\n   }\n   return (\n     <div>\n       <h1>{article.title}</h1>\n       <h2>Position: {article.content}</h2>\n       <Link to='/article'>Back</Link>\n     </div>\n   )\n  }\n  export default ArticlePage\n  */\n\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const res = await axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(id));\n    const charactersFetchLinks = res.title.results[0].characters.slice(0, 10);\n    const promisesData = await charactersFetchLinks.map(link => axios.get(link));\n    const users = res.title.results[13].users;\n    this.setState({\n      users\n    }); // ;\n  }\n\n  render() {\n    const users = this.state.users;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, users.map(home => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, home.title)));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","axios","ArticlePage","Component","constructor","props","state","users","componentDidMount","id","match","params","res","get","charactersFetchLinks","title","results","characters","slice","promisesData","map","link","setState","render","home"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,KAAK,EAAC;AADO,KAAb;AAGE;AAEL;;;;;;;;;;;;;;;;;;AAiBD,QAAOC,iBAAP,GAA0B;AACxB,UAAMC,EAAE,GAAC,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBF,EAAjC;AACD,UAAMG,GAAG,GAAE,MAAMX,KAAK,CAACY,GAAN,4DACqCJ,EADrC,EAAjB;AAGC,UAAMK,oBAAoB,GAAGF,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,KAAhC,CACzB,CADyB,EAEzB,EAFyB,CAA7B;AAIA,UAAMC,YAAY,GAAG,MAAML,oBAAoB,CAACM,GAArB,CAA0BC,IAAI,IACrDpB,KAAK,CAACY,GAAN,CAAWQ,IAAX,CADuB,CAA3B;AATwB,UAaxBd,KAbwB,GAevBK,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkB,EAAlB,CAfuB,CAaxBT,KAbwB;AAiB1B,SAAKe,QAAL,CAAe;AAEbf,MAAAA;AAFa,KAAf,EAjB0B,CAqB1B;AAKC;;AAMAgB,EAAAA,MAAM,GAAI;AAAA,UACAhB,KADA,GACS,KAAKD,KADd,CACAC,KADA;AAKH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACa,GAAN,CAAUI,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACT,KAAX,CAAlB,CAAN,CAAP;AAKP;;AAnEwD","sourcesContent":["import React  from 'react'\n\nimport axios from 'axios';\n\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nexport default class ArticlePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    users:[]\n      \n    }}\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\nasync  componentDidMount(){\n  const id=this.props.match.params.id;\n const res= await axios.get (\n   `https://neunhuladinhmenh.herokuapp.com/api/polls/${id}`\n );\n  const charactersFetchLinks = res.title.results[0].characters.slice (\n      0,\n      10\n    );\n  const promisesData = await charactersFetchLinks.map (link =>\n      axios.get (link)\n    );\n const {\n  users\n \n} =res.title.results[13];\n \nthis.setState ({\n \n  users\n});\n// ;\n\n   \n    \n\n}\n\n \n  \n      \n\n render () {\n    const {users} = this.state;\n  \n    \n       \n        return(<div>{users.map(home => <div>{home.title}</div>)}</div>)\n  \n   \n  \n\n}\n        \n            }\n\n        \n  \n    \n \n\n"]},"metadata":{},"sourceType":"module"}