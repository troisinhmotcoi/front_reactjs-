{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React from 'react';\nimport axios from 'axios'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nexport default class ArticlePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n  /* const article = PlayerAPI.get(\n     parseInt(props.match.params.id, 10)\n   )\n   if (!article) {\n     return <div>Sorry, but the article was not found</div>\n   }\n   return (\n     <div>\n       <h1>{article.title}</h1>\n       <h2>Position: {article.content}</h2>\n       <Link to='/article'>Back</Link>\n     </div>\n   )\n  }\n  export default ArticlePage\n  */\n\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const characterNames = [];\n    const res = await axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(id));\n    const charactersFetchLinks = res.data.results[0].users.slice(0, 10);\n    const promisesData = await charactersFetchLinks.map(link => axios.get(link));\n    axios.all(promisesData).then(value => {\n      value.map(val => characterNames.push(val.data.title));\n      const users = res.data.results[0];\n      this.setState({\n        users: characterNames,\n        loading: false\n      });\n    }); // ;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? users.map(user => {\n      return React.createElement(\"div\", {\n        className: \"params\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"entry_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, user.title)), React.createElement(\"div\", {\n        className: \"entry_content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","axios","ArticlePage","Component","constructor","props","state","isLoading","users","error","componentDidMount","id","match","params","characterNames","res","get","charactersFetchLinks","data","results","slice","promisesData","map","link","all","then","value","val","push","title","setState","loading","render","message","user"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,IAAZ;AACbC,MAAAA,KAAK,EAAC,EADO;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAAb;AAGE;AAEL;;;;;;;;;;;;;;;;;;AAiBD,QAAOC,iBAAP,GAA0B;AACxB,UAAMC,EAAE,GAAC,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,EAAjC;AACA,UAAMG,cAAc,GAAC,EAArB;AACD,UAAMC,GAAG,GAAE,MAAMd,KAAK,CAACe,GAAN,4DACqCL,EADrC,EAAjB;AAGC,UAAMM,oBAAoB,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBX,KAApB,CAA0BY,KAA1B,CACzB,CADyB,EAEzB,EAFyB,CAA7B;AAIA,UAAMC,YAAY,GAAG,MAAMJ,oBAAoB,CAACK,GAArB,CAA0BC,IAAI,IACrDtB,KAAK,CAACe,GAAN,CAAWO,IAAX,CADuB,CAA3B;AAGEtB,IAAAA,KAAK,CAACuB,GAAN,CAAWH,YAAX,EAAyBI,IAAzB,CAA+BC,KAAK,IAAI;AACtCA,MAAAA,KAAK,CAACJ,GAAN,CAAWK,GAAG,IAAIb,cAAc,CAACc,IAAf,CAAqBD,GAAG,CAACT,IAAJ,CAASW,KAA9B,CAAlB;AACL,YACCrB,KAAK,GAELO,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAHD;AAID,WAAKW,QAAL,CAAe;AACbtB,QAAAA,KAAK,EAAEM,cADM;AAEbiB,QAAAA,OAAO,EAAE;AAFI,OAAf;AAIC,KAVG,EAbsB,CAwB1B;AAKC;;AAMCC,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAK1B,KADlC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,UACmBC,KADnB,eACmBA,KADnB;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACwB,OAAV,CAAH,GAA4B,IAFpC,EAGG,CAAC1B,SAAD,GACCC,KAAK,CAACc,GAAN,CAAUY,IAAI,IAAI;AAEhB,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAI,CAACL,KAAT,CADA,CADA,EAKA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CADF;AAgBD,KAlBD,CADD,GAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBJ,CADF;AA6BD;;AA3FsD","sourcesContent":["import React  from 'react'\n\nimport axios from 'axios';\n\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nexport default class ArticlePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isLoading: true,\n    users:[],\n    error: null\n    }}\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\nasync  componentDidMount(){\n  const id=this.props.match.params.id;\n  const characterNames=[];\n const res= await axios.get (\n   `https://neunhuladinhmenh.herokuapp.com/api/polls/${id}`\n );\n  const charactersFetchLinks = res.data.results[0].users.slice (\n      0,\n      10\n    );\n  const promisesData = await charactersFetchLinks.map (link =>\n      axios.get (link)\n    );\n    axios.all (promisesData).then (value => {\n      value.map (val => characterNames.push (val.data.title));\n const \n  users\n \n =res.data.results[0];\nthis.setState ({\n  users: characterNames,\n  loading: false,\n});\n});\n// ;\n\n   \n    \n\n}\n\n \n  \n      \n\n  render() {\n    const { isLoading, users, error } = this.state;\n    return (\n      <React.Fragment>\n        \n        {error ? <p>{error.message}</p> : null}\n        {!isLoading ? (\n          users.map(user => {\n            \n            return (\n              <div className=\"params\">\n              <h1 className=\"entry_title\">\n              <a>{user.title}</a>\n              </h1>\n              \n              <div className=\"entry_content\">\n                \n\n\n     \n                \n                </div>\n              </div>  \n                \n            );\n          })\n        ) : (\n          <h3>Loading...</h3>\n        )}\n      </React.Fragment>\n    );\n  }\n\n}\n        \n            \n\n        \n  \n    \n \n\n"]},"metadata":{},"sourceType":"module"}