{"ast":null,"code":"export const userPostFetch = user => {\n  return dispatch => {\n    return fetch(\"http://neunhuladinhmenh.herokuapp.com/user/register\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(resp => resp.json()).then(data => {\n      if (data.message) {} else {\n        localStorage.setItem(\"token\", data.jwt);\n        dispatch(loginUser(data.user));\n      }\n    });\n  };\n};\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n});","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/redux/userPostFetch.js"],"names":["userPostFetch","user","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","resp","json","data","message","localStorage","setItem","jwt","loginUser","userObj","type","payload"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGC,IAAI,IAAI;AACjC,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,qDAAD,EAAwD;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFyD;AAMlEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA;AAAD,OAAf;AAN4D,KAAxD,CAAL,CAQJS,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,EASJF,IATI,CASCG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB,CACjB,CADD,MACO;AACLC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,GAAnC;AACAf,QAAAA,QAAQ,CAACgB,SAAS,CAACL,IAAI,CAACZ,IAAN,CAAV,CAAR;AACD;AACF,KAfI,CAAP;AAgBD,GAjBD;AAkBD,CAnBI;;AAqBL,MAAMiB,SAAS,GAAGC,OAAO,KAAK;AAC1BC,EAAAA,IAAI,EAAE,YADoB;AAE1BC,EAAAA,OAAO,EAAEF;AAFiB,CAAL,CAAzB","sourcesContent":["export const userPostFetch = user => {\n    return dispatch => {\n      return fetch(\"http://neunhuladinhmenh.herokuapp.com/user/register\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({user})\n      })\n        .then(resp => resp.json())\n        .then(data => {\n          if (data.message) {\n          } else {\n            localStorage.setItem(\"token\", data.jwt)\n            dispatch(loginUser(data.user))\n          }\n        })\n    }\n  }\n  \n  const loginUser = userObj => ({\n      type: 'LOGIN_USER',\n      payload: userObj\n  })"]},"metadata":{},"sourceType":"module"}