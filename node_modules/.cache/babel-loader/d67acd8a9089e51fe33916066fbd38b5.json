{"ast":null,"code":"export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nimport jwtDecode from \"jwt-decode\";\nexport default class Auth {\n  constructor() {\n    this.onUserChange = newUser => console.log(newUser);\n\n    this.decodeToken();\n    window.addEventListener(\"storage\", e => e.key === 'token' && this.decodeToken());\n  }\n\n  userChanged() {\n    this.onUserChange(this.getUser());\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n    this.decodeToken();\n    this.userChanged();\n  }\n\n  decodeToken() {\n    try {\n      this.token = localStorage.getItem(\"token\") || \"\";\n      this.user = jwtDecode(this.token);\n      this.userChanged();\n    } catch (e) {\n      this.logout();\n    }\n  }\n\n  logout() {\n    this.user = null;\n    this.token = \"\";\n    localStorage.setItem(\"token\", \"\");\n    this.userChanged();\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return this.user && new Date().getTime() < this.user.exp;\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/actions/types.js"],"names":["GET_ERRORS","SET_CURRENT_USER","jwtDecode","Auth","constructor","onUserChange","newUser","console","log","decodeToken","window","addEventListener","e","key","userChanged","getUser","setToken","token","localStorage","setItem","getItem","user","logout","isAuthenticated","Date","getTime","exp"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,IAAN,CAAW;AAIxBC,EAAAA,WAAW,GAAG;AAAA,SADdC,YACc,GADEC,OAAD,IAAaC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CACd;;AACZ,SAAKG,WAAL;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqB,KAAKJ,WAAL,EAA/D;AACD;;AAEDK,EAAAA,WAAW,GAAG;AACZ,SAAKT,YAAL,CAAkB,KAAKU,OAAL,EAAlB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACA,SAAKR,WAAL;AACA,SAAKK,WAAL;AACD;;AAEDL,EAAAA,WAAW,GAAG;AACZ,QAAI;AACF,WAAKQ,KAAL,GAAaC,YAAY,CAACE,OAAb,CAAqB,OAArB,KAAiC,EAA9C;AACA,WAAKC,IAAL,GAAYnB,SAAS,CAAC,KAAKe,KAAN,CAArB;AACA,WAAKH,WAAL;AACD,KAJD,CAIE,OAAOF,CAAP,EAAU;AACV,WAAKU,MAAL;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAG;AACP,SAAKD,IAAL,GAAY,IAAZ;AACA,SAAKJ,KAAL,GAAa,EAAb;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACA,SAAKL,WAAL;AACD;;AAEDS,EAAAA,eAAe,GAAG;AAChB;AACA;AACA,WAAO,KAAKF,IAAL,IAAc,IAAIG,IAAJ,GAAWC,OAAX,KAAuB,KAAKJ,IAAL,CAAUK,GAAtD;AACD;;AACDX,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKM,IAAZ;AACD;;AA3CuB","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nimport jwtDecode from \"jwt-decode\";\n\nexport default class Auth {\n  user: null\n  token: \"\"\n  onUserChange = (newUser) => console.log(newUser)\n  constructor() {\n    this.decodeToken();\n    window.addEventListener(\"storage\", (e) => e.key === 'token' && this.decodeToken());\n  }\n\n  userChanged() {\n    this.onUserChange(this.getUser());\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n    this.decodeToken();\n    this.userChanged();\n  }\n\n  decodeToken() {\n    try {\n      this.token = localStorage.getItem(\"token\") || \"\";\n      this.user = jwtDecode(this.token);\n      this.userChanged();\n    } catch (e) {\n      this.logout();\n    }\n  }\n\n  logout() {\n    this.user = null;\n    this.token = \"\";\n    localStorage.setItem(\"token\", \"\");\n    this.userChanged();\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return this.user && (new Date().getTime() < this.user.exp);\n  }\n  getUser() {\n    return this.user;\n  }\n}"]},"metadata":{},"sourceType":"module"}