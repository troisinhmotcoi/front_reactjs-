{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React from 'react';\nimport PlayerAPI from '../api';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nclass ArticlePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: true\n    };\n  }\n\n  /* const article = PlayerAPI.get(\n     parseInt(props.match.params.id, 10)\n   )\n   if (!article) {\n     return <div>Sorry, but the article was not found</div>\n   }\n   return (\n     <div>\n       <h1>{article.title}</h1>\n       <h2>Position: {article.content}</h2>\n       <Link to='/article'>Back</Link>\n     </div>\n   )\n  }\n  export default ArticlePage\n  */\n  async componentDidMount() {\n    const articleContent = await axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(encodeURI(this.props.match.params.id)));\n    const charactersFetchLinks = articleContent.data.results[0].characters.slice(0, 10);\n    const promisesData = await charactersFetchLinks.map(link => axios.get(link));\n    axios.all(promisesData).then(value => {\n      value.map(val => characterNames.push(val.data.title));\n      const _movieDetail$data$res = movieDetail.data.results[0],\n            title = _movieDetail$data$res.title,\n            episode_id = _movieDetail$data$res.episode_id,\n            opening_crawl = _movieDetail$data$res.opening_crawl,\n            director = _movieDetail$data$res.director,\n            producer = _movieDetail$data$res.producer,\n            release_date = _movieDetail$data$res.release_date;\n      this.setState({\n        title,\n        episode_id,\n        opening_crawl,\n        director,\n        producer,\n        release_date,\n        characters: characterNames,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, users.content));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","PlayerAPI","Link","axios","ArticlePage","Component","state","users","loading","componentDidMount","articleContent","get","encodeURI","props","match","params","id","charactersFetchLinks","data","results","characters","slice","promisesData","map","link","all","then","value","val","characterNames","push","title","movieDetail","episode_id","opening_crawl","director","producer","release_date","setState","render","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BC,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAD0B;AAAA;;AAMnC;;;;;;;;;;;;;;;;AAiBD,QAAMC,iBAAN,GAA2B;AAGzB,UAAMC,cAAc,GAAG,MAAMP,KAAK,CAACQ,GAAN,4DACyBC,SAAS,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3B,CADlC,EAA7B;AAGA,UAAMC,oBAAoB,GAAGP,cAAc,CAACQ,IAAf,CAAoBC,OAApB,CAA4B,CAA5B,EAA+BC,UAA/B,CAA0CC,KAA1C,CAC3B,CAD2B,EAE3B,EAF2B,CAA7B;AAIA,UAAMC,YAAY,GAAG,MAAML,oBAAoB,CAACM,GAArB,CAA0BC,IAAI,IACvDrB,KAAK,CAACQ,GAAN,CAAWa,IAAX,CADyB,CAA3B;AAGArB,IAAAA,KAAK,CAACsB,GAAN,CAAWH,YAAX,EAAyBI,IAAzB,CAA+BC,KAAK,IAAI;AACtCA,MAAAA,KAAK,CAACJ,GAAN,CAAWK,GAAG,IAAIC,cAAc,CAACC,IAAf,CAAqBF,GAAG,CAACV,IAAJ,CAASa,KAA9B,CAAlB;AADsC,oCAQlCC,WAAW,CAACd,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,CARkC;AAAA,YAEpCY,KAFoC,yBAEpCA,KAFoC;AAAA,YAGpCE,UAHoC,yBAGpCA,UAHoC;AAAA,YAIpCC,aAJoC,yBAIpCA,aAJoC;AAAA,YAKpCC,QALoC,yBAKpCA,QALoC;AAAA,YAMpCC,QANoC,yBAMpCA,QANoC;AAAA,YAOpCC,YAPoC,yBAOpCA,YAPoC;AAStC,WAAKC,QAAL,CAAe;AACbP,QAAAA,KADa;AAEbE,QAAAA,UAFa;AAGbC,QAAAA,aAHa;AAIbC,QAAAA,QAJa;AAKbC,QAAAA,QALa;AAMbC,QAAAA,YANa;AAObjB,QAAAA,UAAU,EAAES,cAPC;AAQbrB,QAAAA,OAAO,EAAE;AARI,OAAf;AAUD,KAnBD;AAoBD;;AAEC+B,EAAAA,MAAM,GAAI;AAAA,wBACiB,KAAKjC,KADtB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMC,OADN,eACMA,OADN;AAER,WAAOA,OAAO,GACV,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEFD,KAAK,CAACiC,OAFJ,CADF,CAHJ;AAWD;;AAvEiC","sourcesContent":["import React from 'react'\nimport PlayerAPI from '../api'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nclass ArticlePage extends Component {\n  state = {\n    users: [],\n    loading: true,\n  };\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\nasync componentDidMount () {\n  \n  \n  const articleContent = await axios.get (\n    `https://neunhuladinhmenh.herokuapp.com/api/polls/${encodeURI ( this.props.match.params.id)}`\n  )\n  const charactersFetchLinks = articleContent.data.results[0].characters.slice (\n    0,\n    10\n  );\n  const promisesData = await charactersFetchLinks.map (link =>\n    axios.get (link)\n  );\n  axios.all (promisesData).then (value => {\n    value.map (val => characterNames.push (val.data.title));const {\n      title,\n      episode_id,\n      opening_crawl,\n      director,\n      producer,\n      release_date,\n    } = movieDetail.data.results[0];\n    this.setState ({\n      title,\n      episode_id,\n      opening_crawl,\n      director,\n      producer,\n      release_date,\n      characters: characterNames,\n      loading: false,\n    });\n  });\n}\n\n  render () {\n    const {users, loading} = this.state;\n    return loading\n      ? <Loading />\n      : (\n        <div>\n          <main className=\"art\">\n           \n       {users.content}     \n          </main>\n          \n        </div>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}