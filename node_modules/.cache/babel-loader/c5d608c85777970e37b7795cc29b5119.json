{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\an\\\\Documents\\\\frontReact\\\\front_reactjs-\\\\src\\\\components\\\\About.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { secretUser } from '../actions/authentication';\nimport { object } from 'prop-types';\n\nclass About extends React.Component {\n  constructor() {\n    super();\n    const posts_str = sessionStorage.getItem('secret'); // const post=  posts_str.replace(/\\\\n/g,\"\\\\n\").replace(/\\\\r/g,\"\\\\r\");\n\n    this.state = {\n      posts: posts_str,\n      isLoading: false\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          posts = _this$state.posts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, posts, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: \"/article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"back\")));\n  }\n\n}\n\nexport default connect(null, {\n  secretUser\n})(About);\n/*{!isLoading ? (\r\n              posts.map(posts=>{ \r\n                //keys=Object.keys(posts[2]);\r\n            // const   values=Object.values(posts[0])\r\n\r\n            return  (<div>\r\n              <h1 key='posts.title'>{posts.title}</h1>\r\n              {posts.slice(30,185).split(\"\\r\\n\")}\r\n             </div>\r\n                       )\r\n            \r\n            }\r\n               )\r\n              ) : (\r\n                  <h3> loading ....</h3>\r\n                )}\r\n}*/","map":{"version":3,"sources":["C:\\Users\\an\\Documents\\frontReact\\front_reactjs-\\src\\components\\About.js"],"names":["React","connect","Link","secretUser","object","About","Component","constructor","posts_str","sessionStorage","getItem","state","posts","isLoading","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;;AACA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAE;AAAC;AACV,UAAMC,SAAS,GAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAnB,CADS,CAEd;;AACK,SAAKC,KAAL,GAAa;AACRC,MAAAA,KAAK,EAACJ,SADE;AAETK,MAAAA,SAAS,EAAC;AAFD,KAAb;AAID;;AAGHC,EAAAA,MAAM,GAAE;AAAA,wBACoB,KAAKH,KADzB;AAAA,UACGE,SADH,eACGA,SADH;AAAA,UACaD,KADb,eACaA,KADb;AAEJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKA,KAFL,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP,CAHH,CADJ;AAOP;;AApBmC;;AAsBpC,eAAgBX,OAAO,CAAC,IAAD,EAAM;AAACE,EAAAA;AAAD,CAAN,CAAP,CAA4BE,KAA5B,CAAhB;AACA","sourcesContent":["import React from 'react'\r\nimport { connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {secretUser} from '../actions/authentication';\r\nimport { object } from 'prop-types';\r\nclass About extends React.Component {\r\n    constructor(){super();\r\n        const posts_str = (sessionStorage.getItem('secret'));\r\n   // const post=  posts_str.replace(/\\\\n/g,\"\\\\n\").replace(/\\\\r/g,\"\\\\r\");\r\n        this.state = {\r\n             posts:posts_str,\r\n            isLoading:false\r\n        };\r\n      }\r\n     \r\n\r\n    render(){ \r\n        const {isLoading,posts}=this.state\r\n        return(\r\n            <React.Fragment>\r\n             \r\n                {posts}\r\n               <div> {<Link to={`/article`}>back</Link>}\r\n                         </div>\r\n           </React.Fragment>) \r\n}\r\n}\r\nexport  default connect(null,{secretUser}) (About)\r\n/*{!isLoading ? (\r\n              posts.map(posts=>{ \r\n                //keys=Object.keys(posts[2]);\r\n            // const   values=Object.values(posts[0])\r\n\r\n            return  (<div>\r\n              <h1 key='posts.title'>{posts.title}</h1>\r\n              {posts.slice(30,185).split(\"\\r\\n\")}\r\n             </div>\r\n                       )\r\n            \r\n            }\r\n               )\r\n              ) : (\r\n                  <h3> loading ....</h3>\r\n                )}\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}