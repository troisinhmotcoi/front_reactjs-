{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { SET_CURRENT_USER } from './types';\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('http:localhost:8000/api/user/register', user).then(res => history.push('/login')).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  });\n};\nexport const loginUser = (email, password) => dispatch => {\n  // const payload = {\n  //   email:'email',\n  // password:'password' \n  //};const userStr = JSON.stringify(user)\n  const auth = {\n    email: email,\n    password: password\n  };\n  const data = f = 'json&features=' + JSON.stringify(auth);\n  axios.post('http://localhost:8000/api/user/login', data, {\n    headers: {\n      \"Accept\": \"*\",\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(res => {\n    const token = res.data.token.token;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(res => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  });\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/actions/authentication.js"],"names":["axios","GET_ERRORS","setAuthToken","jwt_decode","SET_CURRENT_USER","registerUser","user","history","dispatch","post","then","res","push","catch","err","type","payload","loginUser","email","password","auth","data","f","JSON","stringify","headers","token","localStorage","setItem","decoded","setCurrentUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmBC,QAAQ,IAAI;AACvDR,EAAAA,KAAK,CAACS,IAAN,CAAW,uCAAX,EAAoDH,IAApD,EACSI,IADT,CACcC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CADrB,EAESC,KAFT,CAEeC,GAAG,IAAI;AACVN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd,UADD;AAELe,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAPT;AAQH,CATM;AAWP,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoBX,QAAQ,IAAI;AACtD;AACE;AACE;AACD;AACH,QAAOY,IAAI,GAAE;AACRF,IAAAA,KAAK,EAACA,KADE;AAEVC,IAAAA,QAAQ,EAAEA;AAFA,GAAb;AAIA,QAAOE,IAAI,GAACC,CAAC,GAAC,mBAAiBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACCpB,EAAAA,KAAK,CAACS,IAAN,CAAW,sCAAX,EAAkDY,IAAlD,EACA;AACII,IAAAA,OAAO,EAAE;AAAE,gBAAS,GAAX;AACT,sBAAe;AADN;AADb,GADA,EAMSf,IANT,CAMcC,GAAG,IAAI;AAAA,UACDe,KADC,GACSf,GAAG,CAACU,IAAJ,CAASK,KADlB,CACDA,KADC;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAxB,IAAAA,YAAY,CAACwB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAG1B,UAAU,CAACuB,KAAD,CAA1B;AACAlB,IAAAA,QAAQ,CAACsB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAZT,EAaShB,KAbT,CAaeF,GAAG,IAAI;AACVH,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd,UADD;AAELe,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAlBT;AAmBH,CA7BM;AA8BP,OAAO,MAAMc,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHd,IAAAA,IAAI,EAAEX,gBADH;AAEHY,IAAAA,OAAO,EAAEa;AAFN,GAAP;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { SET_CURRENT_USER } from './types';\n\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('http:localhost:8000/api/user/register', user)\n            .then(res => history.push('/login'))\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: {}\n                });\n            });\n}\n\nexport const loginUser = (email,password) => dispatch => {\n   // const payload = {\n     //   email:'email',\n       // password:'password' \n      //};const userStr = JSON.stringify(user)\n   const  auth= {\n        email:email,\n      password: password\n    }\n   const  data=f='json&features='+JSON.stringify(auth)\n    axios.post('http://localhost:8000/api/user/login',data,\n    {\n        headers: { \"Accept\":\"*\",\n        \"Content-Type\":\"text/plain\",\n          }\n    })\n            .then(res => {\n                const { token } = res.data.token;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch(res => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: {}\n                });\n            });\n}\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}"]},"metadata":{},"sourceType":"module"}