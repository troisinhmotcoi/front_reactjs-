{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React, { Component } from 'react';\nimport PlayerAPI from '../api';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { read } from 'fs'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nexport default class ArticlePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  /* const article = PlayerAPI.get(\n     parseInt(props.match.params.id, 10)\n   )\n   if (!article) {\n     return <div>Sorry, but the article was not found</div>\n   }\n   return (\n     <div>\n       <h1>{article.title}</h1>\n       <h2>Position: {article.content}</h2>\n       <Link to='/article'>Back</Link>\n     </div>\n   )\n  }\n  export default ArticlePage\n  */\n  async getData(props) {\n    const res = await axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(this.props.match.params.id)); //return await res.json();\n\n    return \"Hey!\";\n  }\n\n  componentDidMount() {\n    this.getData().then(data => this.setState({\n      data\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, data.map(data => {\n      return React.createElement(\"div\", {\n        className: \"params\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"entry_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, data.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, data.content, \"ggyty\")));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","Component","PlayerAPI","Link","axios","read","ArticlePage","state","data","getData","props","res","get","match","params","id","componentDidMount","then","setState","render","map","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,IAArB,C,CACA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AAENC,MAAAA,IAAI,EAAE;AAFA,KADyC;AAAA;;AAMlD;;;;;;;;;;;;;;;;AAiBD,QAAMC,OAAN,CAAeC,KAAf,EAAsB;AAIpB,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,4DACoC,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAD5D,EAAlB,CAJoB,CAOpB;;AACA,WAAO,MAAP;AAED;;AACDC,EAAAA,iBAAiB,GAAG;AAEd,SAAKP,OAAL,GAAeQ,IAAf,CAAoBT,IAAI,IAAI,KAAKU,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd,CAA5B;AAGL;;AACAW,EAAAA,MAAM,GAAI;AAAA,UACAX,IADA,GACQ,KAAKD,KADb,CACAC,IADA;AAEP,WACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGCA,IAAI,CAACY,GAAL,CAASZ,IAAI,IAAI;AAEJ,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAI,CAACa,KAAT,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIb,IAAI,CAACc,OAAT,UAFA,CADA,CADF;AASC,KAXd,CAHD,CADI;AAmBF;;AA7DiD","sourcesContent":["import React, {Component}  from 'react'\nimport PlayerAPI from '../api'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { read } from 'fs';\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nexport default class ArticlePage extends Component {\n  state = {\n    \n    data: []\n  };\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\nasync getData (props) {\n  \n  \n  \n  const res=  await axios.get (\n    `https://neunhuladinhmenh.herokuapp.com/api/polls/${this.props.match.params.id}`\n  )\n  //return await res.json();\n  return \"Hey!\";\n\n}\ncomponentDidMount() {\n  \n      this.getData().then(data => this.setState({data}))\n                    ;\n  \n}\n render () {\n    const {data} = this.state;\n    return(\n<React.Fragment>\n        \n          \n{data.map(data => {\n              \n              return (\n                <div className=\"params\">\n                <h1 className=\"entry_title\">\n                <a>{data.title}</a>\n                <p>{data.content}ggyty</p>\n                </h1>\n                \n              </div> )\n          ;\n              })\n            }         \n        \n        </React.Fragment>)\n }\n}\n"]},"metadata":{},"sourceType":"module"}