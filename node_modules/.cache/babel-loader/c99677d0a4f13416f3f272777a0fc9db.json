{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React from 'react';\nimport axios from 'axios'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nexport default class ArticlePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      us: []\n    };\n\n    this.getData = async () => {\n      const id = this.props.match.params.id;\n      axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(id)).then(data => this.setState({\n        us: data,\n        isLoading: false\n      })) // \n      ;\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const _this$state = this.state,\n          us = _this$state.us,\n          isLoading = _this$state.isLoading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, !isLoading ? us.map(me => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, me.title, \"jlk;l\"));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"bede...\"));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","axios","ArticlePage","Component","state","isLoading","us","getData","id","props","match","params","get","then","data","setState","componentDidMount","render","map","me","title"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,EAAE,EAAE;AAFE,KAD+C;;AAAA,SAuBzDC,OAvByD,GAuB/C,YAAY;AAGpB,YAAMC,EAAE,GAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAjC;AACCP,MAAAA,KAAK,CAACW,GAAN,4DACqDJ,EADrD,GAIAK,IAJA,CAIKC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACT,QAAAA,EAAE,EAACQ,IAAJ;AAC1BT,QAAAA,SAAS,EAAE;AADe,OAAd,CAJb,EAOF;AAPE;AAWF,KAtCwD;AAAA;;AAuCzDW,EAAAA,iBAAiB,GAAG;AAEd,SAAKT,OAAL;AAGL;;AAEAU,EAAAA,MAAM,GAAI;AAAA,wBACgB,KAAKb,KADrB;AAAA,UACAE,EADA,eACAA,EADA;AAAA,UACGD,SADH,eACGA,SADH;AAIP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,SAAD,GACTC,EAAE,CAACY,GAAH,CAAOC,EAAE,IAAE;AAAE,aACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,EAAE,CAACC,KAAR,UADF,CADW;AAKZ,KALD,CADS,GAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATN,CADF;AAgBF;;AAlEuD","sourcesContent":["import React  from 'react'\n\nimport axios from 'axios';\n\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nexport default class ArticlePage extends React.Component {\n  state = {\n    isLoading: true,\n    us: []\n  };\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\ngetData = async () => {\n  \n  \n  const id=this.props.match.params.id;\n   axios.get (\n    `https://neunhuladinhmenh.herokuapp.com/api/polls/${id}`\n  )\n\n  .then(data => this.setState({us:data,\n    isLoading: false,\n  }))\n // \n;\n  \n\n}\ncomponentDidMount() {\n  \n      this.getData();\n                    \n                    \n}\n\n render () {\n    const {us,isLoading} = this.state;\n  \n\n    return(\n      <React.Fragment>\n        {!isLoading ? (\nus.map(me=>{ return (\n  <div>\n    <h1>{me.title}jlk;l</h1>\n  </div>\n);\n})\n        ):(\n            <h3>bede...</h3>\n          )}\n</React.Fragment>\n        \n    )  \n    \n }\n}\n"]},"metadata":{},"sourceType":"module"}