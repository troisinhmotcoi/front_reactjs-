{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js\";\nimport React, { Component } from 'react';\nimport PlayerAPI from '../api';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { read } from 'fs'; // The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\n\nexport default class ArticlePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: undefined,\n      title: [],\n      content: undefined,\n      loading: true\n    };\n  }\n\n  /* const article = PlayerAPI.get(\n     parseInt(props.match.params.id, 10)\n   )\n   if (!article) {\n     return <div>Sorry, but the article was not found</div>\n   }\n   return (\n     <div>\n       <h1>{article.title}</h1>\n       <h2>Position: {article.content}</h2>\n       <Link to='/article'>Back</Link>\n     </div>\n   )\n  }\n  export default ArticlePage\n  */\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const characterNames = [];\n\n    const _ref = await axios.get(\"https://neunhuladinhmenh.herokuapp.com/api/polls/\".concat(id)).then(data => this.setState({\n      data\n    })),\n          articleContent = _ref.articleContent;\n\n    return await articleContent.json();\n  }\n\n  render() {\n    const data = this.state;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, data.map(data => {\n      return;\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, data.content);\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"c\\xE1i g\\xEC v\\u1EADy\")));\n  }\n\n}","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/ArticlePage.js"],"names":["React","Component","PlayerAPI","Link","axios","read","ArticlePage","state","id","undefined","title","content","loading","componentDidMount","props","match","params","characterNames","get","then","data","setState","articleContent","json","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,IAArB,C,CACA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AACNC,MAAAA,EAAE,EAACC,SADG;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,OAAO,EAACF,SAHF;AAING,MAAAA,OAAO,EAAE;AAJH,KADyC;AAAA;;AAQlD;;;;;;;;;;;;;;;;AAiBD,QAAMC,iBAAN,GAA2B;AACzB,UAAML,EAAE,GAAG,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBR,EAAnC;AACA,UAAMS,cAAc,GAAG,EAAvB;;AAFyB,iBAIA,MAAMb,KAAK,CAACc,GAAN,4DACuBV,EADvB,GAG9BW,IAH8B,CAGzBC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACD,MAAAA;AAAD,KAAd,CAHiB,CAJN;AAAA,UAIlBE,cAJkB,QAIlBA,cAJkB;;AAQ3B,WAAO,MAAMA,cAAc,CAACC,IAAf,EAAb;AACC;;AACAC,EAAAA,MAAM,GAAI;AACP,UAAMJ,IAAI,GAAG,KAAKb,KAAlB;AACA,WACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGa,IAAI,CAACK,GAAL,CAASL,IAAI,IAAI;AAChB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAI,CAACT,OAAX;AACD,KAHA,CAFH,EAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPH,CADR,CADI;AAcF;;AAnDiD","sourcesContent":["import React, {Component}  from 'react'\nimport PlayerAPI from '../api'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { read } from 'fs';\n// The Player looks up the player using the number parsed from\n// the URL's pathname. If no player is found with the given\n// number, then a \"player not found\" message is displayed.\nexport default class ArticlePage extends Component {\n  state = {\n    id:undefined,\n    title: [],\n    content:undefined,\n    loading: true\n  };\n\n /* const article = PlayerAPI.get(\n    parseInt(props.match.params.id, 10)\n  )\n  if (!article) {\n    return <div>Sorry, but the article was not found</div>\n  }\n  return (\n    <div>\n      <h1>{article.title}</h1>\n      <h2>Position: {article.content}</h2>\n      <Link to='/article'>Back</Link>\n    </div>\n  )\n}\n\nexport default ArticlePage\n*/\nasync componentDidMount () {\n  const id = this.props.match.params.id\n  const characterNames = [];\n  \n  const {articleContent} = await axios.get (\n    `https://neunhuladinhmenh.herokuapp.com/api/polls/${id}`\n  )\n  .then(data => this.setState({data}))\nreturn await articleContent.json();\n}\n render () {\n    const data = this.state;\n    return(\n<React.Fragment>\n        <div>\n          \n          {data.map(data => {\n            return\n            <div>{data.content}</div>\n          }\n            )}\n           <p>cái gì vậy</p>     \n          \n          \n        </div>\n        </React.Fragment>)\n }\n}\n"]},"metadata":{},"sourceType":"module"}