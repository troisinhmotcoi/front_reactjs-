{"ast":null,"code":"import validator from \"validator\";\nexport const validateSignUpForm = payload => {\n  const errors = {};\n  let message = \"\";\n  let isFormValid = true;\n\n  if (!payload || typeof payload.name !== \"string\" || payload.name.trim().length === 0) {\n    isFormValid = false;\n    errors.name = \"Please provide a user name.\";\n  }\n\n  if (!payload || typeof payload.email !== \"string\" || !validator.isEmail(payload.email)) {\n    isFormValid = false;\n    errors.email = \"Please provide a correct email address.\";\n  }\n\n  if (!payload || typeof payload.password !== \"string\" || payload.password.trim().length < 8) {\n    isFormValid = false;\n    errors.password = \"Password must have at least 8 characters.\";\n  }\n\n  if (!payload || payload.pwconfirm !== payload.password) {\n    isFormValid = false;\n    errors.pwconfirm = \"Password confirmation doesn't match.\";\n  }\n\n  if (!isFormValid) {\n    message = \"Check the form for errors.\";\n  }\n\n  return {\n    success: isFormValid,\n    message,\n    errors\n  };\n};","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/validateSignup.js"],"names":["validator","validateSignUpForm","payload","errors","message","isFormValid","name","trim","length","email","isEmail","password","pwconfirm","success"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,IAAI;AAC3C,QAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MACE,CAACH,OAAD,IACA,OAAOA,OAAO,CAACI,IAAf,KAAwB,QADxB,IAEAJ,OAAO,CAACI,IAAR,CAAaC,IAAb,GAAoBC,MAApB,KAA+B,CAHjC,EAIE;AACAH,IAAAA,WAAW,GAAG,KAAd;AACAF,IAAAA,MAAM,CAACG,IAAP,GAAc,6BAAd;AACD;;AAED,MACE,CAACJ,OAAD,IACA,OAAOA,OAAO,CAACO,KAAf,KAAyB,QADzB,IAEA,CAACT,SAAS,CAACU,OAAV,CAAkBR,OAAO,CAACO,KAA1B,CAHH,EAIE;AACAJ,IAAAA,WAAW,GAAG,KAAd;AACAF,IAAAA,MAAM,CAACM,KAAP,GAAe,yCAAf;AACD;;AAED,MACE,CAACP,OAAD,IACA,OAAOA,OAAO,CAACS,QAAf,KAA4B,QAD5B,IAEAT,OAAO,CAACS,QAAR,CAAiBJ,IAAjB,GAAwBC,MAAxB,GAAiC,CAHnC,EAIE;AACAH,IAAAA,WAAW,GAAG,KAAd;AACAF,IAAAA,MAAM,CAACQ,QAAP,GAAkB,2CAAlB;AACD;;AAED,MAAI,CAACT,OAAD,IAAYA,OAAO,CAACU,SAAR,KAAsBV,OAAO,CAACS,QAA9C,EAAwD;AACtDN,IAAAA,WAAW,GAAG,KAAd;AACAF,IAAAA,MAAM,CAACS,SAAP,GAAmB,sCAAnB;AACD;;AAED,MAAI,CAACP,WAAL,EAAkB;AAChBD,IAAAA,OAAO,GAAG,4BAAV;AACD;;AAED,SAAO;AACLS,IAAAA,OAAO,EAAER,WADJ;AAELD,IAAAA,OAFK;AAGLD,IAAAA;AAHK,GAAP;AAKD,CA9CM","sourcesContent":["import validator from \"validator\";\n\nexport const validateSignUpForm = payload => {\n  const errors = {};\n  let message = \"\";\n  let isFormValid = true;\n\n  if (\n    !payload ||\n    typeof payload.name !== \"string\" ||\n    payload.name.trim().length === 0\n  ) {\n    isFormValid = false;\n    errors.name = \"Please provide a user name.\";\n  }\n\n  if (\n    !payload ||\n    typeof payload.email !== \"string\" ||\n    !validator.isEmail(payload.email)\n  ) {\n    isFormValid = false;\n    errors.email = \"Please provide a correct email address.\";\n  }\n\n  if (\n    !payload ||\n    typeof payload.password !== \"string\" ||\n    payload.password.trim().length < 8\n  ) {\n    isFormValid = false;\n    errors.password = \"Password must have at least 8 characters.\";\n  }\n\n  if (!payload || payload.pwconfirm !== payload.password) {\n    isFormValid = false;\n    errors.pwconfirm = \"Password confirmation doesn't match.\";\n  }\n\n  if (!isFormValid) {\n    message = \"Check the form for errors.\";\n  }\n\n  return {\n    success: isFormValid,\n    message,\n    errors\n  };\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}