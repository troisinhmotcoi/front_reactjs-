{"ast":null,"code":"var _jsxFileName = \"/home/anhhuynh/front_reactjs-/src/components/navbar/auth.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Signup from './Signup';\nimport Login from './Login';\nimport { getProfileFetch } from './redux/getProfileFetch';\nimport { logoutUser } from './redux/logoutUser';\nimport { connect } from 'react-redux'; // The Roster component matches one of two different routes\n// depending on the full pathname\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.getProfileFetch();\n    };\n\n    this.handleClick = event => {\n      event.preventDefault(); // Remove the token from localStorage\n\n      localStorage.removeItem(\"token\"); // Remove the user object from the Redux store\n\n      this.props.logoutUser();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), this.props.currentUser.username ? React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Log Out\") : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(getProfileFetch()),\n  logoutUser: () => dispatch(logoutUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/anhhuynh/front_reactjs-/src/components/navbar/auth.js"],"names":["React","Switch","Route","Signup","Login","getProfileFetch","logoutUser","connect","Auth","Component","componentDidMount","props","handleClick","event","preventDefault","localStorage","removeItem","render","currentUser","username","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;;AACA,MAAMC,IAAN,SAAmBC,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBC,iBADyB,GACL,MAAM;AAC1B,WAAKC,KAAL,CAAWN,eAAX;AACD,KAH0B;;AAAA,SAK3BO,WAL2B,GAKbC,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN,GADqB,CAErB;;AACAC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB,EAHqB,CAIrB;;AACA,WAAKL,KAAL,CAAWL,UAAX;AACD,KAX0B;AAAA;;AAY3BW,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACc,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEd,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,EAEU,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV,CAFI,EAMH,KAAKO,KAAL,CAAWO,WAAX,CAAuBC,QAAvB,GACW;AAAQ,MAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,GAEW,IARR,CADF;AAaH;;AA1B4B;;AA4B7B,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAClCH,EAAAA,WAAW,EAAEG,KAAK,CAACH;AADe,CAAL,CAA7B;;AAGA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACxClB,EAAAA,eAAe,EAAE,MAAMkB,QAAQ,CAAClB,eAAe,EAAhB,CADS;AAExCC,EAAAA,UAAU,EAAE,MAAMiB,QAAQ,CAACjB,UAAU,EAAX;AAFc,CAAL,CAAnC;;AAMA,eAAeC,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Signup from './Signup';\nimport Login from './Login';\nimport {getProfileFetch} from './redux/getProfileFetch';\nimport {logoutUser} from './redux/logoutUser';\nimport {connect} from 'react-redux';\n\n// The Roster component matches one of two different routes\n// depending on the full pathname\nclass Auth extends Component {\n    componentDidMount = () => {\n    this.props.getProfileFetch()\n  }\n\n  handleClick = event => {\n    event.preventDefault()\n    // Remove the token from localStorage\n    localStorage.removeItem(\"token\")\n    // Remove the user object from the Redux store\n    this.props.logoutUser()\n  }\n  render() {\n    return (\n      <div>\n\n  <Switch>\n                <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/login\" component={Login}/>\n  </Switch>\n  {this.props.currentUser.username\n            ? <button onClick={this.handleClick}>Log Out</button>\n            : null\n          }\n  </div>\n);\n}\n}\nconst mapStateToProps = state => ({\ncurrentUser: state.currentUser\n})\nconst mapDispatchToProps = dispatch => ({\ngetProfileFetch: () => dispatch(getProfileFetch()),\nlogoutUser: () => dispatch(logoutUser())\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n \n\n\n\n"]},"metadata":{},"sourceType":"module"}